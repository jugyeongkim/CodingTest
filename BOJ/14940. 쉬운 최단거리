from collections import deque
n,m=map(int,input().split())
ground=[]
visited=[[0 for _ in range(m)] for _ in range(n)]
for _ in range(n):
    ground.append(list(map(int,input().split())))
startx,starty=-1,-1
for i in range(n):
    for j in range(m):
        if ground[i][j]==2:
            startx,starty=i,j
            break
    if startx!=-1:
        break

dx=[0,0,-1,1]
dy=[1,-1,0,0]

q=deque()
q.append((startx,starty,0))
while q:
    nowx,nowy,nowv=q.popleft()
    visited[nowx][nowy]=1
    ground[nowx][nowy]=nowv
    for i in range(4):
        nx=nowx+dx[i]
        ny=nowy+dy[i]
        if nx<0 or ny<0 or nx>=n or ny>=m:
            continue
        if ground[nx][ny]==0:
            continue
        if visited[nx][ny]==0:
            q.append((nx,ny,nowv+1))
            visited[nx][ny]=1
for i in range(n):
    for j in range(m):
        if visited[i][j]==0 and ground[i][j]!=0:
            ground[i][j]=-1
for i in range(n):
    for j in range(m):
        print(ground[i][j],end=' ')
    print()
