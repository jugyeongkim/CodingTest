from collections import deque
import sys
input=sys.stdin.readline
n,m=map(int,input().split())
arr=[]
for _ in range(n):
    arr.append(list(map(int,input().split())))
def oneyearlater(arr):
    dx=[0,0,-1,1]
    dy=[1,-1,0,0]
    narr=[[0 for _ in range(len(arr[0]))] for _ in range(len(arr))]
    for i in range(1,n-1):
        for j in range(1,m-1):
            cnt=0
            for k in range(4):
                nx=i+dx[k]
                ny=j+dy[k]
                if nx<0 or ny<0 or nx>=n or ny>=m:
                    continue
                if arr[nx][ny]==0:
                    cnt+=1
            if cnt>arr[i][j]:
                narr[i][j]=0
            else:
                narr[i][j]=arr[i][j]-cnt
    return narr
    
def cntregion(arr):
    if max(map(max,arr))==0:
        return -1
    dx=[0,0,1,-1]
    dy=[1,-1,0,0]
    visited=[[0 for _ in range(len(arr[0]))]for _ in range(len(arr))]
    n=len(arr)
    m=len(arr[0])
    cnt=0
    for i in range(1,n-1):
        for j in range(1,m-1):
            if arr[i][j]!=0 and visited[i][j]==0:
                cnt+=1
                q=deque()
                q.append((i,j))
                visited[i][j]=1
                while q:
                    next=q.popleft()
                    x=next[0]
                    y=next[1]
                    for k in range(4):
                        nx=x+dx[k]
                        ny=y+dy[k]
                        if nx<=0 or ny<=0 or nx>=n-1 or ny>=m-1:
                            continue
                        if arr[nx][ny]>0 and visited[nx][ny]==0:
                            q.append((nx,ny))
                            visited[nx][ny]=1
    return cnt
year=0
while(True):
    checknum=cntregion(arr)
    if checknum>=2:
        print(year)
        break
    elif checknum==-1:
        print(0)
        break
    else:
        year+=1
        arr=oneyearlater(arr)
            
    
