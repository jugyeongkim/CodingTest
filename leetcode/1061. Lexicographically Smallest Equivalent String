from collections import defaultdict
class Solution(object):
    def smallestEquivalentString(self, s1, s2, baseStr):
        """
        :type s1: str
        :type s2: str
        :type baseStr: str
        :rtype: str
        """
        par={chr(a):chr(a) for a in range(97,123)}
        
        def find(u):
            p=par[u]
            while p!=par[p]:
                par[p]=par[par[p]]
                p=par[p]
            return p

        def union(u,v):
            p1,p2=find(u),find(v)
            if p1<p2:
                par[p2]=p1
            else:
                par[p1]=p2
            
        for c1,c2 in zip(s1,s2):
            if find(c1)!=find(c2):
                union(c1,c2)
        ans=''
        for c in baseStr:
            ans+=find(c)
        return ans
